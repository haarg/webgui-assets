==== Template ================================================================
Asset ID    : OOyMH33plAy6oCj_QWrxtg
Menu Title  : Lookup Registrant (Default)
Parent      : root/import/ems
Title       : Lookup Registrant (Default)
URL         : root/import/ems/lookup-registrant-default
==== headBlock ===============================================================
<link href="^Extras(/yui/build/reset-fonts-grids/reset-fonts-grids.css);" rel="stylesheet" type="text/css">
<link href="^Extras(/yui/build/datatable/assets/skins/sam/datatable.css);" rel="stylesheet" type="text/css">


<script src="^Extras(/yui/build/utilities/utilities.js);" type="text/javascript"></script>
<script src="^Extras(/yui/build/json/json-min.js);" type="text/javascript"></script>
<script src="^Extras(/yui/build/datasource/datasource-beta-min.js);" type="text/javascript"></script>
<script src="^Extras(/yui/build/datatable/datatable-beta-min.js);" type="text/javascript"></script>

<style type="text/css">
div.search, p {
	text-align: left;
}

</style>

==== synopsis ================================================================
~
==== template ================================================================
<div class=" yui-skin-sam">
	<p>
	<a href="<tmpl_var buyBadgeUrl>">^International(buy badge,Asset_EventManagementSystem);</a>
	&bull; <a href="<tmpl_var viewEventsUrl>">^International(view tickets,Asset_EventManagementSystem);</a>
	&bull; ^ViewCart;
	</p>
	    <div id="search"><form id="keywordSearchForm"><input type="text" name="keywords" id="keywordsField" /><input type="submit" value="^International(search,Asset_EventManagementSystem);" /></form></div>

    <div id="emsRegPaging"></div>
    <div id="emsRegList"></div>
</div>


<script type="text/javascript">
YAHOO.util.Event.onDOMReady(function () {
    var DataSource = YAHOO.util.DataSource,
        Dom        = YAHOO.util.Dom,
        DataTable  = YAHOO.widget.DataTable,
        Paginator  = YAHOO.widget.Paginator;
   
    
    // the datasource deals with the stuff returned from www_getRegistrantsAsJson
    var mySource = new DataSource('<tmpl_var getRegistrantsUrl>');
    mySource.responseType   = DataSource.TYPE_JSON;
    mySource.responseSchema = {
        resultsList : 'records',
        totalRecords: 'totalRecords',
        fields      : [ 'badgeNumber', 'name', 'title', 'badgeId','manageUrl','buildBadgeUrl']
    };

    // paginator in case there are a lot of badges
    var myPaginator = new Paginator({
        containers         : ['emsRegPaging'],
        pageLinks          : 5,
        rowsPerPage        : 25,
        rowsPerPageOptions : [25,50,100],
        template           : "<strong>{CurrentPageReport}</strong> {PreviousPageLink} {PageLinks} {NextPageLink} {RowsPerPageDropdown}"
    });

	// build badge formatter
    var formatBuildBadge = function(elCell, oRecord, oColumn, badgeNumber) {
        elCell.innerHTML = '<a href="' + oRecord.getData('buildBadgeUrl') + '">' + badgeNumber + '</a>'; 
    }; 
	
	// manage registrant formatter
    var formatManageRegistrant = function(elCell, oRecord, oColumn, manageUrl) {
        elCell.innerHTML = '<a href="' + manageUrl + '">^International(manage,Asset_EventManagementSystem);</a>'; 
    }; 
	
	// A funnction to build a JSON query for the paginator
    var buildQueryString = function(state,dt) {
        return ";startIndex=" + state.pagination.recordOffset +
               ";results="   + state.pagination.rowsPerPage;
    }; 
	
    // create the data table
    var myTableConfig = {
        initialRequest         : ';startIndex=0;results=25',
        generateRequest        : buildQueryString, 
        paginator              : myPaginator,
        paginationEventHandler : DataTable.handleDataSourcePagination
    };

        var myColumnDefs = [
<tmpl_if isRegistrationStaff>
    {key:"manageUrl",sortable:true, label:"^International(manage,Asset_EventManagementSystem);", formatter:formatManageRegistrant},
</tmpl_if>
    {key:"badgeNumber",sortable:true, label:"^International(badge number,Asset_EventManagementSystem);", formatter:formatBuildBadge},
    {key:"name", label:"^International(name,Shop);",sortable:true},
    {key:"title", label:"^International(992,WebGUI);",sortable:true}
    ];
    var myTable = new DataTable('emsRegList', myColumnDefs, mySource, myTableConfig);
    Dom.get('keywordSearchForm').onsubmit = function () {
         mySource.sendRequest(';keywords=' + Dom.get('keywordsField').value + ';startIndex=0', 
            myTable.onDataReturnInitializeTable, myTable);
        return false;
    };

});
</script>

==== extraHeadTags ===========================================================
~
==== Properties ==============================================================
display:
  isHidden: '1'
  newWindow: '0'
meta:
  inheritUrlFromParent: '0'
  isExportable: '1'
  isPackage: '0'
  isPrototype: '0'
properties:
  namespace: EMS/LookupRegistrant
  parser: WebGUI::Asset::Template::HTMLTemplate
  showInForms: '1'
security:
  groupIdEdit: '12'
  groupIdView: '7'
  ownerUserId: '3'

